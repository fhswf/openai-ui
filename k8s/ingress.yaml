---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  namespace: openai-proxy
  name: openai-ui-stripprefix
spec:
  stripPrefix:
    prefixes:
      - /openai/ui
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  namespace: openai-proxy
  name: ui-stripprefix
spec:
  stripPrefix:
    prefixes:
      - /ui
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: login.ki.fh-swf.de
  namespace: openai-proxy
spec:
  entryPoints:
    - web-secure
  routes:
    - kind: Rule
      match: Host(`login.ki.fh-swf.de`) && PathPrefix(`/openai/ui`)
      priority: 10
      services:
        - kind: Service
          name: openai-ui
          namespace: openai-proxy
          port: 80
      middlewares:
        - name: openai-ui-stripprefix
  tls:
    certResolver: default
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: openai.ki.fh-swf.de
  namespace: openai-proxy
spec:
  entryPoints:
    - web-secure
  routes:
    - kind: Rule
      match: Host(`openai.ki.fh-swf.de`)
      priority: 10
      services:
        - kind: Service
          name: openai-ui
          namespace: openai-proxy
          port: 80
  tls:
    certResolver: default
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: redirectscheme
spec:
  redirectScheme:
    scheme: https
    permanent: true
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: openai.ki.fh-swf.de-http
  namespace: openai-proxy
spec:
  entryPoints:
    - web
  routes:
    - kind: Rule
      match: Host(`openai.ki.fh-swf.de`)
      middlewares:
        - name: redirectscheme
      priority: 10
      services:
        - kind: Service
          name: openai-ui
          namespace: openai-proxy
          port: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.frontend.passHostHeader: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
  name: openai.fh-swf.cloud
  namespace: openai-proxy
spec:
  rules:
  - host: openai.fh-swf.cloud
    http:
      paths:
      - frontend:
          service:
            name: openai-ui
            port:
              number: 80
        path: /
        pathType: Prefix
